<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.v3.mapper.TProductMapper">
  <resultMap id="BaseResultMap" type="com.qf.v3.entity.TProduct">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="price" jdbcType="BIGINT" property="price" />
    <result column="sale_price" jdbcType="BIGINT" property="salePrice" />
    <result column="sale_point" jdbcType="VARCHAR" property="salePoint" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="flag" jdbcType="BIT" property="flag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, image, price, sale_price, sale_point, type_id, type_name, flag, create_time,
    update_time, create_user, update_user
  </sql>
  <select id="selectTProduct" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from t_product
    where id = #{id,jdbcType=BIGINT}
  </select>
<select id="list" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from t_product
    where flag=1
</select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_product
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_product
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteAllByPrimaryKey" parameterType="java.lang.String">
    delete from t_product
    where id in
    <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.qf.v3.entity.TProduct" useGeneratedKeys="true">
    insert into t_product (`name`, image, price,
      sale_price, sale_point, type_id,
      type_name, flag, create_time,
      update_time, create_user, update_user
      )
    values (#{name,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, #{price,jdbcType=BIGINT},
      #{salePrice,jdbcType=BIGINT}, #{salePoint,jdbcType=VARCHAR}, #{typeId,jdbcType=BIGINT},
      #{typeName,jdbcType=VARCHAR}, #{flag,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, #{updateUser,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.qf.v3.entity.TProduct" useGeneratedKeys="true">
    insert into t_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="salePrice != null">
        sale_price,
      </if>
      <if test="salePoint != null">
        sale_point,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="typeName != null">
        type_name,
      </if>

        flag,

        create_time,

        update_time,

        create_user,

        update_user,

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=BIGINT},
      </if>
      <if test="salePrice != null">
        #{salePrice,jdbcType=BIGINT},
      </if>
      <if test="salePoint != null">
        #{salePoint,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>

        1,now(),now(),1,1

    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.v3.entity.TProduct">
    update t_product
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="salePrice != null">
        sale_price = #{salePrice,jdbcType=BIGINT},
      </if>
      <if test="salePoint != null">
        sale_point = #{salePoint,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="typeName != null">
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.v3.entity.TProduct">
    update t_product
    set `name` = #{name,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      price = #{price,jdbcType=BIGINT},
      sale_price = #{salePrice,jdbcType=BIGINT},
      sale_point = #{salePoint,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=BIGINT},
      type_name = #{typeName,jdbcType=VARCHAR},
      flag = 1,
      create_time = now(),
      update_time = now(),
      create_user = 1,
      update_user = 1
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
